LungCapData <- read.table(file.choose(), header = T, sep=",")
?apply
apply
rm(LungCapData)
StockData <- read.table(file.choose(), header = T, sep = ",")
apply(X=StockData, MARGIN = 2, FUN = mean)
View(StockData)
apply(X=StockData, MARGIN = 2, FUN = mean, na.rm=TRUE)
rm(StockData)
StockData <- read.table(file.choose(), header = T, row.names = 1, sep = ",")
apply(X=StockData, MARGIN = 2, FUN=mean)
apply(X=StockData, MARGIN = 2, FUN=mean, na.rm=T)
View(StockData)
StockData <- read.table(file.choose(), header = T, row.names = 1, sep = "\t")
apply(X=StockData, MARGIN = 2, FUN=mean)
apply(X=StockData, MARGIN = 2, FUN=mean, na.rm=T)
AVG <- apply(X=StockData, MARGIN = 2, FUN=mean, na.rm=T)
AVG
apply(StockData, 2, mean, na.rm=T)
colMeans(StockData, na.rm = T)
apply(StockData, 2, max, na.rm=T)
apply(StockData, 2, FUN = quantile, probs=c(0.2, .80), na.rm=T)
apply(StockData, 2, FUN = plot, type="l")
#send the plot function more arguments, such as title, axes labels, and so forth
apply(StockData, 2, FUN=plot, type="l", main="stock", ylab="Price", xlab="Day")
#MARGIN = 1, apply the function to row-wise
apply(StockData, 1, FUN = sum, na.rm=T)
#rowSums, DO SAME
rowSums(StockData, na.rm = T)
#make a nice plot of these
plot(apply(StockData, 1, FUN = sum, na.rm=T), type="l", ylab="Total Market Value", xlab="Day", main="Market Trend")
#add in some nice colored points..
points(apply(StockData, 1, FUN=sum, na.rm=T), pch=16, col="blue")
setwd("D:/2-LearnLanguage/R/prj_4")
#using tAPPLY FUNC IN R
LungCapData <- read.table(file.choose(), header = T, sep="\t")
View(LungCapData)
source("D:/2-LearnLanguage/R/prj_4/tApplyFunc.R", echo=TRUE)
summary(LungCapData)
attach(LungCapData)
Gender <- as.factor(Gender)
rm(Gender)
LungCapData$Gender <- as.factor(LungCapData$Gender)
class(Gender)
levels(Gender)
View(LungCapData)
class(LungCapData$Gender)
summary(LungCapData)
levels(LungCapData$Gender)
?tApply
attach(LungCapData)
#calculate the mean Age for Smoker /NonSmoker
tapply(X=Age, INDEX=Smoke, FUN=mean, na.rm=T)
#no need to include 'X' , "INDEX", "FUN"
tapply(Age, Smoke, mean, na.rm=T)
m <- tapply(Age, Smoke, mean, na.rm=T)
m
tapply(Age, Smoke, mean, na.rm=T, simplify = F)
mean(Age[Smoke=="no"])
mean(Age[Smoke=="yes"])
#applying the "summary" function to groups
tapply(Age, Smoke, summary, na.rm=T)
mean(Age[Smoke=="no"], na.rm = T)
#applying the "quantile" functiion to groups
tapply(Age, Smoke, quantile, probs=c(0.2, 0.8), na.rm=T)
#"subset" based on multiple variables/vectors
#calculate the mean Age for Smoker/Non-smoker and male/female
tapply(X=Age, INDEX=list(Smoke, Gender), FUN=mean, na.rm=T)
#a less efficient way to get this done...
mean(Age[Smoke=="no"&Gender=="male"], na.rm=T)
mean(Age[Smoke=="no"&Gender=="female"], na.rm=T)
mean(Age[Smoke=="yes"&Gender=="male"], na.rm=T)
mean(Age[Smoke=="yes"&Gender=="female"], na.rm=T)
by(Age, list(Smoke, Gender), mean, na.rm=T)
#subset the elements in the usual way
temp <- by(Age, list(Smoke, Gender), mean, na.rm=T)
temp
temp[4]
#see the "class" of the temp
class(temp)
#convert it to a vector
c(temp)
temp2 <- c(temp)
#check the class
class(temp2)
